user                            nginx;
worker_processes                auto;
error_log                       /var/log/nginx/error.log warn;

events {
    worker_connections          4096;
    use                         epoll;
    multi_accept                on;
}

http {
    # Main settings
    sendfile                        on;
    tcp_nopush                      on;
    tcp_nodelay                     on;
    client_header_timeout           1m;
    client_body_timeout             1m;
    client_header_buffer_size       2k;
    client_body_buffer_size         256k;
    client_max_body_size            256m;
    large_client_header_buffers     4   8k;
    send_timeout                    60;
    keepalive_timeout               70;
    reset_timedout_connection       on;

    server_tokens                   off;
    server_name_in_redirect         off;
    server_names_hash_max_size      512;
    server_names_hash_bucket_size   512;

    # Mime settings
    include                     /usr/local/openresty/nginx/conf/mime.types;
    default_type                application/octet-stream;


    # Compression
    gzip                        on;
    gzip_comp_level             9;
    gzip_min_length             512;
    gzip_buffers                8 64k;
    gzip_types                  text/plain text/css text/javascript text/js text/xml application/json application/javascript application/x-javascript application/xml application/xml+rss application/x-font-ttf image/svg+xml font/opentype;
    gzip_proxied                any;
    gzip_disable                "MSIE [1-6]\.";

    # Proxy settings
    proxy_http_version          1.1;
    proxy_redirect              off; # not what you think - it simply cancel default nginx behavior
    proxy_connect_timeout       5m;
    proxy_send_timeout          5m;
    proxy_read_timeout          5m;
    proxy_buffers               32 4k;

    proxy_set_header            Host              $host;
    proxy_set_header            X-Real-IP         $remote_addr;
    proxy_set_header            X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header            X-Forwarded-Proto $scheme;

    proxy_set_header            Upgrade $http_upgrade;
    proxy_set_header            Connection $http_connection;

    # SSL PCI Compliance
    ssl_session_cache           shared:SSL:10m;
    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2; # TLSv1 and 1.1 prevented for PCI-DSS compliance
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK";

    # Cache settings
    proxy_cache_path            /var/cache/nginx/site levels=1:2 keys_zone=site_diskcached:10m max_size=5g inactive=45m use_temp_path=off;
    proxy_cache_key             "main$scheme$request_method$host$request_uri";
    proxy_temp_path             /var/cache/nginx/temp;
    proxy_ignore_headers        Vary Expires Set-Cookie Cache-Control;
    proxy_pass_request_headers  on;
    underscores_in_headers      on;

    proxy_cache_min_uses        2;
    proxy_cache                 site_diskcached;
    proxy_ssl_server_name       on;
    proxy_intercept_errors      on;

    # set mininum cache valid to 60 seconds, a small amount goes a long way
    proxy_cache_valid           any 60s;
    proxy_cache_use_stale       error timeout invalid_header updating http_500 http_502 http_503 http_504;    

    # File cache settings
    open_file_cache             max=20000 inactive=30s;
    open_file_cache_valid       60s;
    open_file_cache_min_uses    2;
    open_file_cache_errors      off;

    # Other settings
    log_subrequest              on;
    rewrite_log                 on;

    # A DNS resolver must be defined for OSCP stapling to function.
    resolver                    8.8.8.8 8.8.4.4;

    # Log format
    log_format  main            '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';
    log_format  logalt          '-= ngx: $status $request_method $scheme://$host$request_uri $request_time '
                                '$remote_addr $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  logalt;

    # additional conf
    include     /usr/local/openresty/nginx/conf/cdn-ips.conf;
    include     /usr/local/openresty/nginx/conf/auto-ssl.conf;
      
    # virtual hosts
    include     /usr/local/openresty/nginx/conf/conf.d/*.conf;
}