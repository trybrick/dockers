# HTTPS server
server {
    listen 443 default_server;
    server_name _;

    error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page  500 502 503 504  /50x.html;

    # Dynamic handler for issuing or returning certs for SNI domains.
    ssl_certificate_by_lua_block {
      auto_ssl:ssl_certificate()
    }

    # You must still define a static ssl_certificate file for nginx to start.
    #
    # You may generate a self-signed fallback with:
    #
    # openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 \
    #   -subj '/CN=sni-support-required-for-valid-ssl' \
    #   -keyout /etc/ssl/resty-auto-ssl-fallback.key \
    #   -out /etc/ssl/resty-auto-ssl-fallback.crt

    ssl_certificate     ssl/resty-auto-ssl-fallback.crt;
    ssl_certificate_key ssl/resty-auto-ssl-fallback.key;
    #ssl_certificate     conf.d/hannaford.gsnrecipes.com.crt;
    #ssl_certificate_key conf.d/hannaford.gsnrecipes.com.key;

    # Endpoint used for performing domain verification with Let's Encrypt.
    location ^~ /.well-known/acme-challenge/ {
      content_by_lua_block {
        auto_ssl:challenge_server()
      }
    }

    include conf.d/00-dsweb.inc;
    include conf.d/00-dsweb-legacy.inc;
    include conf.d/hannaford.proxy.inc;
}

# HTTP server
server {
    listen 80 default_server;
    server_name _;

    error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page  500 502 503 504  /50x.html;

    # Endpoint used for performing domain verification with Let's Encrypt.
    location ^~ /.well-known/acme-challenge/ {
      content_by_lua_block {
        auto_ssl:challenge_server()
      }
    }

    include conf.d/00-dsweb.inc;
    include conf.d/00-dsweb-legacy.inc;
    include conf.d/hannaford.proxy.inc;
}
