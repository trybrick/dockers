# HTTPS server
server {
  listen 443 ssl;
  listen [::]:443 ipv6only=on ssl;

  # server_name localhost;

  # Dynamic handler for issuing or returning certs for SNI domains.
  ssl_certificate_by_lua_block {
    auto_ssl:ssl_certificate()
  }

  # You must still define a static ssl_certificate file for nginx to start.
  #
  # You may generate a self-signed fallback with:
  #
  # openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 \
  #   -subj '/CN=sni-support-required-for-valid-ssl' \
  #   -keyout /etc/ssl/resty-auto-ssl-fallback.key \
  #   -out /etc/ssl/resty-auto-ssl-fallback.crt

  ssl_certificate /etc/nginx/ssl/resty-auto-ssl-fallback.crt;
  ssl_certificate_key /etc/nginx/ssl/resty-auto-ssl-fallback.key;

  include /etc/nginx/conf.d/zz-dsweb.inc;
  include /etc/nginx/conf.d/zz-dsweb-legacy.inc;
}

# HTTP server
server {
    listen 80;
    listen [::]:80 ipv6only=on;

    # server_name localhost;

    # Endpoint used for performing domain verification with Let's Encrypt.
    location /.well-known/acme-challenge/ {
      content_by_lua_block {
        auto_ssl:challenge_server()
      }
    }

    include /etc/nginx/conf.d/zz-dsweb.inc;
    include /etc/nginx/conf.d/zz-dsweb-legacy.inc;
}